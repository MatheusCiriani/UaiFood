// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/*--- MODELS ---*/ 

model User {
  id        BigInt     @id @default(autoincrement())
  name      String
  phone     String
  password  String
  type      UserType
  address   Address?    @relation(fields: [addressId], references: [id])
  addressId BigInt?     @unique

  orders    Order[]     @relation("ClientOrders")
  created   Order[]     @relation("CreatedOrders")

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Address {
  id        BigInt   @id @default(autoincrement())
  street    String
  number    String
  district  String
  city      String
  state     String
  zipCode   String

  user      User?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id             BigInt          @id @default(autoincrement())
  paymentMethod  PaymentMethod
  status         String

  clientId       BigInt
  client         User            @relation("ClientOrders", fields: [clientId], references: [id])

  createdById    BigInt
  createdBy      User            @relation("CreatedOrders", fields: [createdById], references: [id])

  orderItems     OrderItem[]

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model OrderItem {
  id         BigInt     @id @default(autoincrement())
  orderId    BigInt
  order      Order      @relation(fields: [orderId], references: [id])

  itemId     BigInt
  item       Item       @relation(fields: [itemId], references: [id])

  quantity   Int

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Item {
  id          BigInt      @id @default(autoincrement())
  description String
  unitPrice   Float
  categoryId  BigInt
  category    Category    @relation(fields: [categoryId], references: [id])

  orderItems  OrderItem[]

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Category {
  id          BigInt      @id @default(autoincrement())
  description String

  items       Item[]

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}




/* --- ENUMS ---*/

enum UserType {
  CLIENT
  ADMIN
}

enum PaymentMethod {
  CASH
  DEBIT
  CREDIT
  PIX
}
   